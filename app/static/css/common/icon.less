/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@add_logo-name: add_logo;
@add_logo-x: 24px;
@add_logo-y: 0px;
@add_logo-offset-x: -24px;
@add_logo-offset-y: 0px;
@add_logo-width: 18px;
@add_logo-height: 18px;
@add_logo-total-width: 42px;
@add_logo-total-height: 24px;
@add_logo-image: '/static/images/common/icon/sprite.png';
@add_logo: 24px 0px -24px 0px 18px 18px 42px 24px '/static/images/common/icon/sprite.png' add_logo;
@ok-name: ok;
@ok-x: 0px;
@ok-y: 0px;
@ok-offset-x: 0px;
@ok-offset-y: 0px;
@ok-width: 24px;
@ok-height: 24px;
@ok-total-width: 42px;
@ok-total-height: 24px;
@ok-image: '/static/images/common/icon/sprite.png';
@ok: 0px 0px 0px 0px 24px 24px 42px 24px '/static/images/common/icon/sprite.png' ok;
@spritesheet-width: 42px;
@spritesheet-height: 24px;
@spritesheet-image: '/static/images/common/icon/sprite.png';
@spritesheet-sprites: @add_logo @ok;
@spritesheet: 42px 24px '/static/images/common/icon/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: extract(@sprite, 10);
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
